{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "85b4dbc0",
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "import numpy as np\n",
    "import matplotlib.pyplot as plt\n",
    "from half_normal_plotting import HalfNormPlot\n",
    "from effects_table import yates_step, generate_standard_table\n",
    "from statsmodels.formula.api import ols\n",
    "import statsmodels.api as sm\n",
    "from scipy.stats import t"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "c8d4bbd1",
   "metadata": {},
   "source": [
    "### 1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "bdd89f2e",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Block</th>\n",
       "      <th>A</th>\n",
       "      <th>B</th>\n",
       "      <th>C</th>\n",
       "      <th>y</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Block 1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Block 1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Block 1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>8</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Block 1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>10</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Block 1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>Block 1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>Block 1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>11</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>Block 1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>9</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>Block 2</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>Block 2</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>Block 2</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>7</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>Block 2</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>7</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>Block 2</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>Block 2</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>Block 2</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>10</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>Block 2</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>8</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "      Block  A  B  C   y\n",
       "0   Block 1  0  0  0   3\n",
       "1   Block 1  1  0  0   6\n",
       "2   Block 1  0  1  0   8\n",
       "3   Block 1  1  1  0  10\n",
       "4   Block 1  0  0  1   4\n",
       "5   Block 1  1  0  1   6\n",
       "6   Block 1  0  1  1  11\n",
       "7   Block 1  1  1  1   9\n",
       "8   Block 2  0  0  0   4\n",
       "9   Block 2  1  0  0   4\n",
       "10  Block 2  0  1  0   7\n",
       "11  Block 2  1  1  0   7\n",
       "12  Block 2  0  0  1   4\n",
       "13  Block 2  1  0  1   3\n",
       "14  Block 2  0  1  1  10\n",
       "15  Block 2  1  1  1   8"
      ]
     },
     "execution_count": 2,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#read in data\n",
    "data = pd.read_excel(\"Assignment 3 Data.xlsx\", sheet_name=\"question_1\")\n",
    "data['Block'] = data['Block'].apply(lambda x: \"Block 1\" if x == 1 else \"Block 2\")\n",
    "data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "2ab1ac5b",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>df</th>\n",
       "      <th>sum_sq</th>\n",
       "      <th>mean_sq</th>\n",
       "      <th>F</th>\n",
       "      <th>PR(&gt;F)</th>\n",
       "      <th>sd_effect</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>Block</th>\n",
       "      <td>1.0</td>\n",
       "      <td>6.25</td>\n",
       "      <td>6.250000</td>\n",
       "      <td>6.481481</td>\n",
       "      <td>0.038334</td>\n",
       "      <td>2.500000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>A</th>\n",
       "      <td>1.0</td>\n",
       "      <td>0.25</td>\n",
       "      <td>0.250000</td>\n",
       "      <td>0.259259</td>\n",
       "      <td>0.626283</td>\n",
       "      <td>0.500000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>B</th>\n",
       "      <td>1.0</td>\n",
       "      <td>81.00</td>\n",
       "      <td>81.000000</td>\n",
       "      <td>84.000000</td>\n",
       "      <td>0.000038</td>\n",
       "      <td>9.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>A:B</th>\n",
       "      <td>1.0</td>\n",
       "      <td>2.25</td>\n",
       "      <td>2.250000</td>\n",
       "      <td>2.333333</td>\n",
       "      <td>0.170471</td>\n",
       "      <td>1.500000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>C</th>\n",
       "      <td>1.0</td>\n",
       "      <td>2.25</td>\n",
       "      <td>2.250000</td>\n",
       "      <td>2.333333</td>\n",
       "      <td>0.170471</td>\n",
       "      <td>1.500000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>A:C</th>\n",
       "      <td>1.0</td>\n",
       "      <td>4.00</td>\n",
       "      <td>4.000000</td>\n",
       "      <td>4.148148</td>\n",
       "      <td>0.081107</td>\n",
       "      <td>2.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>B:C</th>\n",
       "      <td>1.0</td>\n",
       "      <td>2.25</td>\n",
       "      <td>2.250000</td>\n",
       "      <td>2.333333</td>\n",
       "      <td>0.170471</td>\n",
       "      <td>1.500000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>A:B:C</th>\n",
       "      <td>1.0</td>\n",
       "      <td>1.00</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.037037</td>\n",
       "      <td>0.342410</td>\n",
       "      <td>1.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Residual</th>\n",
       "      <td>7.0</td>\n",
       "      <td>6.75</td>\n",
       "      <td>0.964286</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.981981</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "           df  sum_sq    mean_sq          F    PR(>F)  sd_effect\n",
       "Block     1.0    6.25   6.250000   6.481481  0.038334   2.500000\n",
       "A         1.0    0.25   0.250000   0.259259  0.626283   0.500000\n",
       "B         1.0   81.00  81.000000  84.000000  0.000038   9.000000\n",
       "A:B       1.0    2.25   2.250000   2.333333  0.170471   1.500000\n",
       "C         1.0    2.25   2.250000   2.333333  0.170471   1.500000\n",
       "A:C       1.0    4.00   4.000000   4.148148  0.081107   2.000000\n",
       "B:C       1.0    2.25   2.250000   2.333333  0.170471   1.500000\n",
       "A:B:C     1.0    1.00   1.000000   1.037037  0.342410   1.000000\n",
       "Residual  7.0    6.75   0.964286        NaN       NaN   0.981981"
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "q1_lm = ols('y ~ Block + A*B*C', data=data).fit()\n",
    "anova = sm.stats.anova_lm(q1_lm)\n",
    "anova['sd_effect'] = anova['mean_sq']**.5\n",
    "anova"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "5898306b",
   "metadata": {},
   "source": [
    "Based on the results of the Anova analysis we can see that only the B main effect is significant at the 5% level.  Looking at the data and keeping the goal of minimizing $y$ in mind we can see that whenever B is at the high level the response variable tends to be higher.  Lets formalize this insight by looking at this as a $2^1$ experiment with only factor B as the main effect and the other test runs considered replications of the experiment."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "a8a54346",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Block</th>\n",
       "      <th>B</th>\n",
       "      <th>y</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Block 1</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Block 1</td>\n",
       "      <td>0</td>\n",
       "      <td>6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Block 1</td>\n",
       "      <td>1</td>\n",
       "      <td>8</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Block 1</td>\n",
       "      <td>1</td>\n",
       "      <td>10</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Block 1</td>\n",
       "      <td>0</td>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>Block 1</td>\n",
       "      <td>0</td>\n",
       "      <td>6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>Block 1</td>\n",
       "      <td>1</td>\n",
       "      <td>11</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>Block 1</td>\n",
       "      <td>1</td>\n",
       "      <td>9</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>Block 2</td>\n",
       "      <td>0</td>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>Block 2</td>\n",
       "      <td>0</td>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>Block 2</td>\n",
       "      <td>1</td>\n",
       "      <td>7</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>Block 2</td>\n",
       "      <td>1</td>\n",
       "      <td>7</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>Block 2</td>\n",
       "      <td>0</td>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>Block 2</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>Block 2</td>\n",
       "      <td>1</td>\n",
       "      <td>10</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>Block 2</td>\n",
       "      <td>1</td>\n",
       "      <td>8</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "      Block  B   y\n",
       "0   Block 1  0   3\n",
       "1   Block 1  0   6\n",
       "2   Block 1  1   8\n",
       "3   Block 1  1  10\n",
       "4   Block 1  0   4\n",
       "5   Block 1  0   6\n",
       "6   Block 1  1  11\n",
       "7   Block 1  1   9\n",
       "8   Block 2  0   4\n",
       "9   Block 2  0   4\n",
       "10  Block 2  1   7\n",
       "11  Block 2  1   7\n",
       "12  Block 2  0   4\n",
       "13  Block 2  0   3\n",
       "14  Block 2  1  10\n",
       "15  Block 2  1   8"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data_B = data[['Block','B','y']]\n",
    "data_B"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "9ead1471",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead tr th {\n",
       "        text-align: left;\n",
       "    }\n",
       "\n",
       "    .dataframe thead tr:last-of-type th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th colspan=\"2\" halign=\"left\">y</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th>mean</th>\n",
       "      <th>count</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Block</th>\n",
       "      <th>B</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th rowspan=\"2\" valign=\"top\">Block 1</th>\n",
       "      <th>0</th>\n",
       "      <td>4.75</td>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>9.50</td>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th rowspan=\"2\" valign=\"top\">Block 2</th>\n",
       "      <th>0</th>\n",
       "      <td>3.75</td>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>8.00</td>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "              y      \n",
       "           mean count\n",
       "Block   B            \n",
       "Block 1 0  4.75     4\n",
       "        1  9.50     4\n",
       "Block 2 0  3.75     4\n",
       "        1  8.00     4"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data_B.groupby(['Block','B']).agg(['mean','count'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "49658823",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "LSD for this experiment is 2.0141*(0.9820*(1/4+1/4))=0.9889\n"
     ]
    }
   ],
   "source": [
    "#calculate the LSD using t distribution and variance of difference in two means\n",
    "LSD = t.ppf(1-.025, 45) * (anova.loc['Residual','mean_sq']**.5 * (1/4 + 1/4))\n",
    "print(f\"LSD for this experiment is {t.ppf(1-.025, 45):.04f}*({anova.loc['Residual','mean_sq']**.5:.04f}*(1/4+1/4))={LSD:.04f}\")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "1fb2ea5c",
   "metadata": {},
   "source": [
    "We can see that for both blocks the difference in means is greater than the LSD so we can conclude that B does have a large and positive impact on $y$.  Knowing this and our goal of minimizing $y$ the recommendation from this experiment is to leave all treatment factors at the low level."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "a2a13b65",
   "metadata": {},
   "source": [
    "### 2) \n",
    "#### a."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 145,
   "id": "d7c1a1fc",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>index</th>\n",
       "      <th>A</th>\n",
       "      <th>B</th>\n",
       "      <th>C</th>\n",
       "      <th>D</th>\n",
       "      <th>E</th>\n",
       "      <th>y</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>23</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>4</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>15</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>27</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>6</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>27</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>24</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>5</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>20</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>30</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>7</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>31</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>16</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>23</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>20</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>24</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>18</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>28</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>22</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>33</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>17</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>29</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>21</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>26</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>19</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>31</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>23</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>33</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>8</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>20</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>12</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>18</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>10</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>25</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>14</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>32</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20</th>\n",
       "      <td>9</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>21</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>21</th>\n",
       "      <td>13</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>25</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22</th>\n",
       "      <td>11</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>24</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>23</th>\n",
       "      <td>15</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>34</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>24</th>\n",
       "      <td>24</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>14</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25</th>\n",
       "      <td>28</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>22</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>26</th>\n",
       "      <td>26</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>24</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>27</th>\n",
       "      <td>30</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>36</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>28</th>\n",
       "      <td>25</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>22</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>29</th>\n",
       "      <td>29</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>31</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>30</th>\n",
       "      <td>27</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>25</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>31</th>\n",
       "      <td>31</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>36</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "    index  A  B  C  D  E   y\n",
       "0       0  0  0  0  0  0  23\n",
       "1       4  1  0  0  0  0  15\n",
       "2       2  0  1  0  0  0  27\n",
       "3       6  1  1  0  0  0  27\n",
       "4       1  0  0  1  0  0  24\n",
       "5       5  1  0  1  0  0  20\n",
       "6       3  0  1  1  0  0  30\n",
       "7       7  1  1  1  0  0  31\n",
       "8      16  0  0  0  1  0  23\n",
       "9      20  1  0  0  1  0  24\n",
       "10     18  0  1  0  1  0  28\n",
       "11     22  1  1  0  1  0  33\n",
       "12     17  0  0  1  1  0  29\n",
       "13     21  1  0  1  1  0  26\n",
       "14     19  0  1  1  1  0  31\n",
       "15     23  1  1  1  1  0  33\n",
       "16      8  0  0  0  0  1  20\n",
       "17     12  1  0  0  0  1  18\n",
       "18     10  0  1  0  0  1  25\n",
       "19     14  1  1  0  0  1  32\n",
       "20      9  0  0  1  0  1  21\n",
       "21     13  1  0  1  0  1  25\n",
       "22     11  0  1  1  0  1  24\n",
       "23     15  1  1  1  0  1  34\n",
       "24     24  0  0  0  1  1  14\n",
       "25     28  1  0  0  1  1  22\n",
       "26     26  0  1  0  1  1  24\n",
       "27     30  1  1  0  1  1  36\n",
       "28     25  0  0  1  1  1  22\n",
       "29     29  1  0  1  1  1  31\n",
       "30     27  0  1  1  1  1  25\n",
       "31     31  1  1  1  1  1  36"
      ]
     },
     "execution_count": 145,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#read in data, and sort into standard order\n",
    "q2_data = pd.read_excel(\"Assignment 3 Data.xlsx\", sheet_name=\"question_2\").reset_index()\n",
    "\n",
    "\n",
    "#make standard table of effects to sort data correctly\n",
    "standard_table = generate_standard_table(n=5, columns=['A','B','C','D','E']).set_index(['A','B','C','D','E'])\n",
    "\n",
    "#index both datasets on A,B,C,D,E\n",
    "q2_data = q2_data.set_index(['A','B','C','D','E'])\n",
    "\n",
    "#merge data on standard table format and reset index\n",
    "q2_fixed = standard_table.merge(q2_data, how='left', left_index=True, right_index=True)\n",
    "q2_data = q2_data.reset_index()\n",
    "q2_fixed = q2_fixed.reset_index()\n",
    "q2_fixed = q2_fixed[['index','A','B','C','D','E','y']]\n",
    "# for col in ['A','B','C','D','E']:\n",
    "#     q2_fixed[col] = q2_fixed[col].map({0:-1,1:1})\n",
    "q2_fixed"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 146,
   "id": "edd98974",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>df</th>\n",
       "      <th>sum_sq</th>\n",
       "      <th>mean_sq</th>\n",
       "      <th>F</th>\n",
       "      <th>PR(&gt;F)</th>\n",
       "      <th>significant</th>\n",
       "      <th>std_effects</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>A</th>\n",
       "      <td>1.0</td>\n",
       "      <td>87.78125</td>\n",
       "      <td>87.781250</td>\n",
       "      <td>26.130233</td>\n",
       "      <td>1.045294e-04</td>\n",
       "      <td>True</td>\n",
       "      <td>9.369165</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>B</th>\n",
       "      <td>1.0</td>\n",
       "      <td>442.53125</td>\n",
       "      <td>442.531250</td>\n",
       "      <td>131.730233</td>\n",
       "      <td>3.911175e-09</td>\n",
       "      <td>True</td>\n",
       "      <td>21.036427</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>C</th>\n",
       "      <td>1.0</td>\n",
       "      <td>81.28125</td>\n",
       "      <td>81.281250</td>\n",
       "      <td>24.195349</td>\n",
       "      <td>1.541882e-04</td>\n",
       "      <td>True</td>\n",
       "      <td>9.015611</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>D</th>\n",
       "      <td>1.0</td>\n",
       "      <td>52.53125</td>\n",
       "      <td>52.531250</td>\n",
       "      <td>15.637209</td>\n",
       "      <td>1.135937e-03</td>\n",
       "      <td>True</td>\n",
       "      <td>7.247845</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>E</th>\n",
       "      <td>1.0</td>\n",
       "      <td>7.03125</td>\n",
       "      <td>7.031250</td>\n",
       "      <td>2.093023</td>\n",
       "      <td>1.672800e-01</td>\n",
       "      <td>False</td>\n",
       "      <td>2.651650</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>A:B</th>\n",
       "      <td>1.0</td>\n",
       "      <td>57.78125</td>\n",
       "      <td>57.781250</td>\n",
       "      <td>17.200000</td>\n",
       "      <td>7.576240e-04</td>\n",
       "      <td>True</td>\n",
       "      <td>7.601398</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>A:C</th>\n",
       "      <td>1.0</td>\n",
       "      <td>1.53125</td>\n",
       "      <td>1.531250</td>\n",
       "      <td>0.455814</td>\n",
       "      <td>5.092267e-01</td>\n",
       "      <td>False</td>\n",
       "      <td>1.237437</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>A:D</th>\n",
       "      <td>1.0</td>\n",
       "      <td>42.78125</td>\n",
       "      <td>42.781250</td>\n",
       "      <td>12.734884</td>\n",
       "      <td>2.563782e-03</td>\n",
       "      <td>True</td>\n",
       "      <td>6.540738</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>A:E</th>\n",
       "      <td>1.0</td>\n",
       "      <td>132.03125</td>\n",
       "      <td>132.031250</td>\n",
       "      <td>39.302326</td>\n",
       "      <td>1.119183e-05</td>\n",
       "      <td>True</td>\n",
       "      <td>11.490485</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>B:C</th>\n",
       "      <td>1.0</td>\n",
       "      <td>22.78125</td>\n",
       "      <td>22.781250</td>\n",
       "      <td>6.781395</td>\n",
       "      <td>1.917995e-02</td>\n",
       "      <td>True</td>\n",
       "      <td>4.772971</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>B:D</th>\n",
       "      <td>1.0</td>\n",
       "      <td>2.53125</td>\n",
       "      <td>2.531250</td>\n",
       "      <td>0.753488</td>\n",
       "      <td>3.982071e-01</td>\n",
       "      <td>False</td>\n",
       "      <td>1.590990</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>B:E</th>\n",
       "      <td>1.0</td>\n",
       "      <td>1.53125</td>\n",
       "      <td>1.531250</td>\n",
       "      <td>0.455814</td>\n",
       "      <td>5.092267e-01</td>\n",
       "      <td>False</td>\n",
       "      <td>1.237437</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>C:D</th>\n",
       "      <td>1.0</td>\n",
       "      <td>1.53125</td>\n",
       "      <td>1.531250</td>\n",
       "      <td>0.455814</td>\n",
       "      <td>5.092267e-01</td>\n",
       "      <td>False</td>\n",
       "      <td>1.237437</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>C:E</th>\n",
       "      <td>1.0</td>\n",
       "      <td>0.28125</td>\n",
       "      <td>0.281250</td>\n",
       "      <td>0.083721</td>\n",
       "      <td>7.760325e-01</td>\n",
       "      <td>False</td>\n",
       "      <td>0.530330</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>D:E</th>\n",
       "      <td>1.0</td>\n",
       "      <td>11.28125</td>\n",
       "      <td>11.281250</td>\n",
       "      <td>3.358140</td>\n",
       "      <td>8.555052e-02</td>\n",
       "      <td>False</td>\n",
       "      <td>3.358757</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Residual</th>\n",
       "      <td>16.0</td>\n",
       "      <td>53.75000</td>\n",
       "      <td>3.359375</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>False</td>\n",
       "      <td>1.832860</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "            df     sum_sq     mean_sq           F        PR(>F)  significant  \\\n",
       "A          1.0   87.78125   87.781250   26.130233  1.045294e-04         True   \n",
       "B          1.0  442.53125  442.531250  131.730233  3.911175e-09         True   \n",
       "C          1.0   81.28125   81.281250   24.195349  1.541882e-04         True   \n",
       "D          1.0   52.53125   52.531250   15.637209  1.135937e-03         True   \n",
       "E          1.0    7.03125    7.031250    2.093023  1.672800e-01        False   \n",
       "A:B        1.0   57.78125   57.781250   17.200000  7.576240e-04         True   \n",
       "A:C        1.0    1.53125    1.531250    0.455814  5.092267e-01        False   \n",
       "A:D        1.0   42.78125   42.781250   12.734884  2.563782e-03         True   \n",
       "A:E        1.0  132.03125  132.031250   39.302326  1.119183e-05         True   \n",
       "B:C        1.0   22.78125   22.781250    6.781395  1.917995e-02         True   \n",
       "B:D        1.0    2.53125    2.531250    0.753488  3.982071e-01        False   \n",
       "B:E        1.0    1.53125    1.531250    0.455814  5.092267e-01        False   \n",
       "C:D        1.0    1.53125    1.531250    0.455814  5.092267e-01        False   \n",
       "C:E        1.0    0.28125    0.281250    0.083721  7.760325e-01        False   \n",
       "D:E        1.0   11.28125   11.281250    3.358140  8.555052e-02        False   \n",
       "Residual  16.0   53.75000    3.359375         NaN           NaN        False   \n",
       "\n",
       "          std_effects  \n",
       "A            9.369165  \n",
       "B           21.036427  \n",
       "C            9.015611  \n",
       "D            7.247845  \n",
       "E            2.651650  \n",
       "A:B          7.601398  \n",
       "A:C          1.237437  \n",
       "A:D          6.540738  \n",
       "A:E         11.490485  \n",
       "B:C          4.772971  \n",
       "B:D          1.590990  \n",
       "B:E          1.237437  \n",
       "C:D          1.237437  \n",
       "C:E          0.530330  \n",
       "D:E          3.358757  \n",
       "Residual     1.832860  "
      ]
     },
     "execution_count": 146,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "q2_lm = ols('y ~ A + B + C + D + E + A:B + A:C + A:D + A:E + B:C + B:D + B:E + C:D + C:E + D:E', data=q2_fixed).fit()\n",
    "q2_anova = sm.stats.anova_lm(q2_lm, typ=1)\n",
    "q2_anova['significant'] = q2_anova['PR(>F)'].apply(lambda x: True if x < .05 else False)\n",
    "q2_anova['std_effects'] = q2_anova['mean_sq']**.5\n",
    "q2_anova"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "df527550",
   "metadata": {},
   "source": [
    "An estimate of the experimental error is 3.360 with 16 degrees of freedom, and the main effects $A, B, C, D$ are significant with interaction effects $A*B,\\;\\;A*D,\\;\\;A*E,\\;\\;B*C$ significant at the 5% alpha level."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "33f01562",
   "metadata": {},
   "source": [
    "#### b."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 147,
   "id": "49c2275f",
   "metadata": {},
   "outputs": [],
   "source": [
    "def encode_effect(X):\n",
    "    A, B, C, D, E = X\n",
    "    effect = []\n",
    "    if A == 1:\n",
    "        effect.append('a')\n",
    "    if B == 1: \n",
    "        effect.append('b')\n",
    "    if C == 1: \n",
    "        effect.append('c')\n",
    "    if D == 1: \n",
    "        effect.append('d')\n",
    "    if E == 1:\n",
    "        effect.append('e')\n",
    "    if len(effect) > 0:\n",
    "        return ''.join(effect)\n",
    "    else:\n",
    "        return '(1)'"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 148,
   "id": "c5939b07",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>index</th>\n",
       "      <th>A</th>\n",
       "      <th>B</th>\n",
       "      <th>C</th>\n",
       "      <th>D</th>\n",
       "      <th>E</th>\n",
       "      <th>y</th>\n",
       "      <th>step_1</th>\n",
       "      <th>step_2</th>\n",
       "      <th>step_3</th>\n",
       "      <th>step_4</th>\n",
       "      <th>step_5</th>\n",
       "      <th>std_effect</th>\n",
       "      <th>effect</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>23</td>\n",
       "      <td>38</td>\n",
       "      <td>92</td>\n",
       "      <td>197</td>\n",
       "      <td>424</td>\n",
       "      <td>833</td>\n",
       "      <td>147.254987</td>\n",
       "      <td>(1)</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>4</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>15</td>\n",
       "      <td>54</td>\n",
       "      <td>105</td>\n",
       "      <td>227</td>\n",
       "      <td>409</td>\n",
       "      <td>53</td>\n",
       "      <td>9.369165</td>\n",
       "      <td>a</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>27</td>\n",
       "      <td>44</td>\n",
       "      <td>108</td>\n",
       "      <td>199</td>\n",
       "      <td>-6</td>\n",
       "      <td>119</td>\n",
       "      <td>21.036427</td>\n",
       "      <td>b</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>6</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>27</td>\n",
       "      <td>61</td>\n",
       "      <td>119</td>\n",
       "      <td>210</td>\n",
       "      <td>59</td>\n",
       "      <td>43</td>\n",
       "      <td>7.601398</td>\n",
       "      <td>ab</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>24</td>\n",
       "      <td>47</td>\n",
       "      <td>95</td>\n",
       "      <td>-11</td>\n",
       "      <td>56</td>\n",
       "      <td>51</td>\n",
       "      <td>9.015611</td>\n",
       "      <td>c</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>5</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>20</td>\n",
       "      <td>61</td>\n",
       "      <td>104</td>\n",
       "      <td>5</td>\n",
       "      <td>63</td>\n",
       "      <td>7</td>\n",
       "      <td>1.237437</td>\n",
       "      <td>ac</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>30</td>\n",
       "      <td>55</td>\n",
       "      <td>96</td>\n",
       "      <td>19</td>\n",
       "      <td>22</td>\n",
       "      <td>-27</td>\n",
       "      <td>-4.772971</td>\n",
       "      <td>bc</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>7</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>31</td>\n",
       "      <td>64</td>\n",
       "      <td>114</td>\n",
       "      <td>40</td>\n",
       "      <td>21</td>\n",
       "      <td>-7</td>\n",
       "      <td>-1.237437</td>\n",
       "      <td>abc</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>16</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>23</td>\n",
       "      <td>38</td>\n",
       "      <td>-8</td>\n",
       "      <td>33</td>\n",
       "      <td>24</td>\n",
       "      <td>41</td>\n",
       "      <td>7.247845</td>\n",
       "      <td>d</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>20</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>24</td>\n",
       "      <td>57</td>\n",
       "      <td>-3</td>\n",
       "      <td>23</td>\n",
       "      <td>27</td>\n",
       "      <td>37</td>\n",
       "      <td>6.540738</td>\n",
       "      <td>ad</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>18</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>28</td>\n",
       "      <td>46</td>\n",
       "      <td>6</td>\n",
       "      <td>31</td>\n",
       "      <td>-2</td>\n",
       "      <td>-9</td>\n",
       "      <td>-1.590990</td>\n",
       "      <td>bd</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>22</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>33</td>\n",
       "      <td>58</td>\n",
       "      <td>-1</td>\n",
       "      <td>32</td>\n",
       "      <td>9</td>\n",
       "      <td>-13</td>\n",
       "      <td>-2.298097</td>\n",
       "      <td>abd</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>17</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>29</td>\n",
       "      <td>36</td>\n",
       "      <td>5</td>\n",
       "      <td>13</td>\n",
       "      <td>-4</td>\n",
       "      <td>7</td>\n",
       "      <td>1.237437</td>\n",
       "      <td>cd</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>21</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>26</td>\n",
       "      <td>60</td>\n",
       "      <td>14</td>\n",
       "      <td>9</td>\n",
       "      <td>-23</td>\n",
       "      <td>-21</td>\n",
       "      <td>-3.712311</td>\n",
       "      <td>acd</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>19</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>31</td>\n",
       "      <td>53</td>\n",
       "      <td>20</td>\n",
       "      <td>15</td>\n",
       "      <td>-2</td>\n",
       "      <td>-15</td>\n",
       "      <td>-2.651650</td>\n",
       "      <td>bcd</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>23</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>33</td>\n",
       "      <td>61</td>\n",
       "      <td>20</td>\n",
       "      <td>6</td>\n",
       "      <td>-5</td>\n",
       "      <td>5</td>\n",
       "      <td>0.883883</td>\n",
       "      <td>abcd</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>8</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>20</td>\n",
       "      <td>-8</td>\n",
       "      <td>16</td>\n",
       "      <td>13</td>\n",
       "      <td>30</td>\n",
       "      <td>-15</td>\n",
       "      <td>-2.651650</td>\n",
       "      <td>e</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>12</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>18</td>\n",
       "      <td>0</td>\n",
       "      <td>17</td>\n",
       "      <td>11</td>\n",
       "      <td>11</td>\n",
       "      <td>65</td>\n",
       "      <td>11.490485</td>\n",
       "      <td>ae</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>10</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>25</td>\n",
       "      <td>-4</td>\n",
       "      <td>14</td>\n",
       "      <td>9</td>\n",
       "      <td>16</td>\n",
       "      <td>7</td>\n",
       "      <td>1.237437</td>\n",
       "      <td>be</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>14</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>32</td>\n",
       "      <td>1</td>\n",
       "      <td>9</td>\n",
       "      <td>18</td>\n",
       "      <td>21</td>\n",
       "      <td>-1</td>\n",
       "      <td>-0.176777</td>\n",
       "      <td>abe</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20</th>\n",
       "      <td>9</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>21</td>\n",
       "      <td>1</td>\n",
       "      <td>19</td>\n",
       "      <td>5</td>\n",
       "      <td>-10</td>\n",
       "      <td>3</td>\n",
       "      <td>0.530330</td>\n",
       "      <td>ce</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>21</th>\n",
       "      <td>13</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>25</td>\n",
       "      <td>5</td>\n",
       "      <td>12</td>\n",
       "      <td>-7</td>\n",
       "      <td>1</td>\n",
       "      <td>11</td>\n",
       "      <td>1.944544</td>\n",
       "      <td>ace</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22</th>\n",
       "      <td>11</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>24</td>\n",
       "      <td>-3</td>\n",
       "      <td>24</td>\n",
       "      <td>9</td>\n",
       "      <td>-4</td>\n",
       "      <td>-19</td>\n",
       "      <td>-3.358757</td>\n",
       "      <td>bce</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>23</th>\n",
       "      <td>15</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>34</td>\n",
       "      <td>2</td>\n",
       "      <td>8</td>\n",
       "      <td>0</td>\n",
       "      <td>-9</td>\n",
       "      <td>-3</td>\n",
       "      <td>-0.530330</td>\n",
       "      <td>abce</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>24</th>\n",
       "      <td>24</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>14</td>\n",
       "      <td>-2</td>\n",
       "      <td>8</td>\n",
       "      <td>1</td>\n",
       "      <td>-2</td>\n",
       "      <td>-19</td>\n",
       "      <td>-3.358757</td>\n",
       "      <td>de</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25</th>\n",
       "      <td>28</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>22</td>\n",
       "      <td>7</td>\n",
       "      <td>5</td>\n",
       "      <td>-5</td>\n",
       "      <td>9</td>\n",
       "      <td>5</td>\n",
       "      <td>0.883883</td>\n",
       "      <td>ade</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>26</th>\n",
       "      <td>26</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>24</td>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "      <td>-7</td>\n",
       "      <td>-12</td>\n",
       "      <td>11</td>\n",
       "      <td>1.944544</td>\n",
       "      <td>bde</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>27</th>\n",
       "      <td>30</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>36</td>\n",
       "      <td>10</td>\n",
       "      <td>5</td>\n",
       "      <td>-16</td>\n",
       "      <td>-9</td>\n",
       "      <td>-5</td>\n",
       "      <td>-0.883883</td>\n",
       "      <td>abde</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>28</th>\n",
       "      <td>25</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>22</td>\n",
       "      <td>8</td>\n",
       "      <td>9</td>\n",
       "      <td>-3</td>\n",
       "      <td>-6</td>\n",
       "      <td>11</td>\n",
       "      <td>1.944544</td>\n",
       "      <td>cde</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>29</th>\n",
       "      <td>29</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>31</td>\n",
       "      <td>12</td>\n",
       "      <td>6</td>\n",
       "      <td>1</td>\n",
       "      <td>-9</td>\n",
       "      <td>3</td>\n",
       "      <td>0.530330</td>\n",
       "      <td>acde</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>30</th>\n",
       "      <td>27</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>25</td>\n",
       "      <td>9</td>\n",
       "      <td>4</td>\n",
       "      <td>-3</td>\n",
       "      <td>4</td>\n",
       "      <td>-3</td>\n",
       "      <td>-0.530330</td>\n",
       "      <td>bcde</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>31</th>\n",
       "      <td>31</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>36</td>\n",
       "      <td>11</td>\n",
       "      <td>2</td>\n",
       "      <td>-2</td>\n",
       "      <td>1</td>\n",
       "      <td>-3</td>\n",
       "      <td>-0.530330</td>\n",
       "      <td>abcde</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "    index  A  B  C  D  E   y  step_1  step_2  step_3  step_4  step_5  \\\n",
       "0       0  0  0  0  0  0  23      38      92     197     424     833   \n",
       "1       4  1  0  0  0  0  15      54     105     227     409      53   \n",
       "2       2  0  1  0  0  0  27      44     108     199      -6     119   \n",
       "3       6  1  1  0  0  0  27      61     119     210      59      43   \n",
       "4       1  0  0  1  0  0  24      47      95     -11      56      51   \n",
       "5       5  1  0  1  0  0  20      61     104       5      63       7   \n",
       "6       3  0  1  1  0  0  30      55      96      19      22     -27   \n",
       "7       7  1  1  1  0  0  31      64     114      40      21      -7   \n",
       "8      16  0  0  0  1  0  23      38      -8      33      24      41   \n",
       "9      20  1  0  0  1  0  24      57      -3      23      27      37   \n",
       "10     18  0  1  0  1  0  28      46       6      31      -2      -9   \n",
       "11     22  1  1  0  1  0  33      58      -1      32       9     -13   \n",
       "12     17  0  0  1  1  0  29      36       5      13      -4       7   \n",
       "13     21  1  0  1  1  0  26      60      14       9     -23     -21   \n",
       "14     19  0  1  1  1  0  31      53      20      15      -2     -15   \n",
       "15     23  1  1  1  1  0  33      61      20       6      -5       5   \n",
       "16      8  0  0  0  0  1  20      -8      16      13      30     -15   \n",
       "17     12  1  0  0  0  1  18       0      17      11      11      65   \n",
       "18     10  0  1  0  0  1  25      -4      14       9      16       7   \n",
       "19     14  1  1  0  0  1  32       1       9      18      21      -1   \n",
       "20      9  0  0  1  0  1  21       1      19       5     -10       3   \n",
       "21     13  1  0  1  0  1  25       5      12      -7       1      11   \n",
       "22     11  0  1  1  0  1  24      -3      24       9      -4     -19   \n",
       "23     15  1  1  1  0  1  34       2       8       0      -9      -3   \n",
       "24     24  0  0  0  1  1  14      -2       8       1      -2     -19   \n",
       "25     28  1  0  0  1  1  22       7       5      -5       9       5   \n",
       "26     26  0  1  0  1  1  24       4       4      -7     -12      11   \n",
       "27     30  1  1  0  1  1  36      10       5     -16      -9      -5   \n",
       "28     25  0  0  1  1  1  22       8       9      -3      -6      11   \n",
       "29     29  1  0  1  1  1  31      12       6       1      -9       3   \n",
       "30     27  0  1  1  1  1  25       9       4      -3       4      -3   \n",
       "31     31  1  1  1  1  1  36      11       2      -2       1      -3   \n",
       "\n",
       "    std_effect effect  \n",
       "0   147.254987    (1)  \n",
       "1     9.369165      a  \n",
       "2    21.036427      b  \n",
       "3     7.601398     ab  \n",
       "4     9.015611      c  \n",
       "5     1.237437     ac  \n",
       "6    -4.772971     bc  \n",
       "7    -1.237437    abc  \n",
       "8     7.247845      d  \n",
       "9     6.540738     ad  \n",
       "10   -1.590990     bd  \n",
       "11   -2.298097    abd  \n",
       "12    1.237437     cd  \n",
       "13   -3.712311    acd  \n",
       "14   -2.651650    bcd  \n",
       "15    0.883883   abcd  \n",
       "16   -2.651650      e  \n",
       "17   11.490485     ae  \n",
       "18    1.237437     be  \n",
       "19   -0.176777    abe  \n",
       "20    0.530330     ce  \n",
       "21    1.944544    ace  \n",
       "22   -3.358757    bce  \n",
       "23   -0.530330   abce  \n",
       "24   -3.358757     de  \n",
       "25    0.883883    ade  \n",
       "26    1.944544    bde  \n",
       "27   -0.883883   abde  \n",
       "28    1.944544    cde  \n",
       "29    0.530330   acde  \n",
       "30   -0.530330   bcde  \n",
       "31   -0.530330  abcde  "
      ]
     },
     "execution_count": 148,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "q2_yates = q2_fixed.copy()\n",
    "q2_yates['step_1'] = yates_step(q2_yates['y'].tolist())\n",
    "q2_yates['step_2'] = yates_step(q2_yates['step_1'].tolist())\n",
    "q2_yates['step_3'] = yates_step(q2_yates['step_2'].tolist())\n",
    "q2_yates['step_4'] = yates_step(q2_yates['step_3'].tolist())\n",
    "q2_yates['step_5'] = yates_step(q2_yates['step_4'].tolist())\n",
    "q2_yates['std_effect'] = q2_yates['step_5'] / (len(q2_data)**.5)\n",
    "q2_yates['effect'] = q2_yates[['A','B','C','D','E']].apply(encode_effect, axis=1)\n",
    "q2_yates"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 149,
   "id": "6eeca974",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "C:\\Users\\aburtnerabt\\Documents\\K-State\\Experimental Design\\half_normal_plotting.py:39: SettingWithCopyWarning: \n",
      "A value is trying to be set on a copy of a slice from a DataFrame.\n",
      "Try using .loc[row_indexer,col_indexer] = value instead\n",
      "\n",
      "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
      "  self.half_norm_data[self.abs_col] = self.half_norm_data[data_col].apply(lambda x: abs(x))\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>index</th>\n",
       "      <th>A</th>\n",
       "      <th>B</th>\n",
       "      <th>C</th>\n",
       "      <th>D</th>\n",
       "      <th>E</th>\n",
       "      <th>y</th>\n",
       "      <th>step_1</th>\n",
       "      <th>step_2</th>\n",
       "      <th>step_3</th>\n",
       "      <th>step_4</th>\n",
       "      <th>step_5</th>\n",
       "      <th>std_effect</th>\n",
       "      <th>effect</th>\n",
       "      <th>abs_std_effect</th>\n",
       "      <th>r_i</th>\n",
       "      <th>r_i*</th>\n",
       "      <th>p_i</th>\n",
       "      <th>v_i</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>14</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>32</td>\n",
       "      <td>1</td>\n",
       "      <td>9</td>\n",
       "      <td>18</td>\n",
       "      <td>21</td>\n",
       "      <td>-1</td>\n",
       "      <td>-0.176777</td>\n",
       "      <td>abe</td>\n",
       "      <td>0.176777</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.016129</td>\n",
       "      <td>0.508065</td>\n",
       "      <td>0.020216</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>31</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>36</td>\n",
       "      <td>11</td>\n",
       "      <td>2</td>\n",
       "      <td>-2</td>\n",
       "      <td>1</td>\n",
       "      <td>-3</td>\n",
       "      <td>-0.530330</td>\n",
       "      <td>abcde</td>\n",
       "      <td>0.530330</td>\n",
       "      <td>2.0</td>\n",
       "      <td>0.048387</td>\n",
       "      <td>0.524194</td>\n",
       "      <td>0.060681</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>27</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>25</td>\n",
       "      <td>9</td>\n",
       "      <td>4</td>\n",
       "      <td>-3</td>\n",
       "      <td>4</td>\n",
       "      <td>-3</td>\n",
       "      <td>-0.530330</td>\n",
       "      <td>bcde</td>\n",
       "      <td>0.530330</td>\n",
       "      <td>3.0</td>\n",
       "      <td>0.080645</td>\n",
       "      <td>0.540323</td>\n",
       "      <td>0.101246</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>9</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>21</td>\n",
       "      <td>1</td>\n",
       "      <td>19</td>\n",
       "      <td>5</td>\n",
       "      <td>-10</td>\n",
       "      <td>3</td>\n",
       "      <td>0.530330</td>\n",
       "      <td>ce</td>\n",
       "      <td>0.530330</td>\n",
       "      <td>4.0</td>\n",
       "      <td>0.112903</td>\n",
       "      <td>0.556452</td>\n",
       "      <td>0.141979</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>15</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>34</td>\n",
       "      <td>2</td>\n",
       "      <td>8</td>\n",
       "      <td>0</td>\n",
       "      <td>-9</td>\n",
       "      <td>-3</td>\n",
       "      <td>-0.530330</td>\n",
       "      <td>abce</td>\n",
       "      <td>0.530330</td>\n",
       "      <td>5.0</td>\n",
       "      <td>0.145161</td>\n",
       "      <td>0.572581</td>\n",
       "      <td>0.182948</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>29</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>31</td>\n",
       "      <td>12</td>\n",
       "      <td>6</td>\n",
       "      <td>1</td>\n",
       "      <td>-9</td>\n",
       "      <td>3</td>\n",
       "      <td>0.530330</td>\n",
       "      <td>acde</td>\n",
       "      <td>0.530330</td>\n",
       "      <td>6.0</td>\n",
       "      <td>0.177419</td>\n",
       "      <td>0.588710</td>\n",
       "      <td>0.224227</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>28</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>22</td>\n",
       "      <td>7</td>\n",
       "      <td>5</td>\n",
       "      <td>-5</td>\n",
       "      <td>9</td>\n",
       "      <td>5</td>\n",
       "      <td>0.883883</td>\n",
       "      <td>ade</td>\n",
       "      <td>0.883883</td>\n",
       "      <td>7.0</td>\n",
       "      <td>0.209677</td>\n",
       "      <td>0.604839</td>\n",
       "      <td>0.265892</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>30</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>36</td>\n",
       "      <td>10</td>\n",
       "      <td>5</td>\n",
       "      <td>-16</td>\n",
       "      <td>-9</td>\n",
       "      <td>-5</td>\n",
       "      <td>-0.883883</td>\n",
       "      <td>abde</td>\n",
       "      <td>0.883883</td>\n",
       "      <td>8.0</td>\n",
       "      <td>0.241935</td>\n",
       "      <td>0.620968</td>\n",
       "      <td>0.308023</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>23</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>33</td>\n",
       "      <td>61</td>\n",
       "      <td>20</td>\n",
       "      <td>6</td>\n",
       "      <td>-5</td>\n",
       "      <td>5</td>\n",
       "      <td>0.883883</td>\n",
       "      <td>abcd</td>\n",
       "      <td>0.883883</td>\n",
       "      <td>9.0</td>\n",
       "      <td>0.274194</td>\n",
       "      <td>0.637097</td>\n",
       "      <td>0.350709</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>7</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>31</td>\n",
       "      <td>64</td>\n",
       "      <td>114</td>\n",
       "      <td>40</td>\n",
       "      <td>21</td>\n",
       "      <td>-7</td>\n",
       "      <td>-1.237437</td>\n",
       "      <td>abc</td>\n",
       "      <td>1.237437</td>\n",
       "      <td>10.0</td>\n",
       "      <td>0.306452</td>\n",
       "      <td>0.653226</td>\n",
       "      <td>0.394044</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>17</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>29</td>\n",
       "      <td>36</td>\n",
       "      <td>5</td>\n",
       "      <td>13</td>\n",
       "      <td>-4</td>\n",
       "      <td>7</td>\n",
       "      <td>1.237437</td>\n",
       "      <td>cd</td>\n",
       "      <td>1.237437</td>\n",
       "      <td>11.0</td>\n",
       "      <td>0.338710</td>\n",
       "      <td>0.669355</td>\n",
       "      <td>0.438132</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>5</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>20</td>\n",
       "      <td>61</td>\n",
       "      <td>104</td>\n",
       "      <td>5</td>\n",
       "      <td>63</td>\n",
       "      <td>7</td>\n",
       "      <td>1.237437</td>\n",
       "      <td>ac</td>\n",
       "      <td>1.237437</td>\n",
       "      <td>12.0</td>\n",
       "      <td>0.370968</td>\n",
       "      <td>0.685484</td>\n",
       "      <td>0.483089</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>10</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>25</td>\n",
       "      <td>-4</td>\n",
       "      <td>14</td>\n",
       "      <td>9</td>\n",
       "      <td>16</td>\n",
       "      <td>7</td>\n",
       "      <td>1.237437</td>\n",
       "      <td>be</td>\n",
       "      <td>1.237437</td>\n",
       "      <td>13.0</td>\n",
       "      <td>0.403226</td>\n",
       "      <td>0.701613</td>\n",
       "      <td>0.529045</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>18</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>28</td>\n",
       "      <td>46</td>\n",
       "      <td>6</td>\n",
       "      <td>31</td>\n",
       "      <td>-2</td>\n",
       "      <td>-9</td>\n",
       "      <td>-1.590990</td>\n",
       "      <td>bd</td>\n",
       "      <td>1.590990</td>\n",
       "      <td>14.0</td>\n",
       "      <td>0.435484</td>\n",
       "      <td>0.717742</td>\n",
       "      <td>0.576147</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>26</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>24</td>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "      <td>-7</td>\n",
       "      <td>-12</td>\n",
       "      <td>11</td>\n",
       "      <td>1.944544</td>\n",
       "      <td>bde</td>\n",
       "      <td>1.944544</td>\n",
       "      <td>15.0</td>\n",
       "      <td>0.467742</td>\n",
       "      <td>0.733871</td>\n",
       "      <td>0.624563</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>13</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>25</td>\n",
       "      <td>5</td>\n",
       "      <td>12</td>\n",
       "      <td>-7</td>\n",
       "      <td>1</td>\n",
       "      <td>11</td>\n",
       "      <td>1.944544</td>\n",
       "      <td>ace</td>\n",
       "      <td>1.944544</td>\n",
       "      <td>16.0</td>\n",
       "      <td>0.500000</td>\n",
       "      <td>0.750000</td>\n",
       "      <td>0.674490</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>25</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>22</td>\n",
       "      <td>8</td>\n",
       "      <td>9</td>\n",
       "      <td>-3</td>\n",
       "      <td>-6</td>\n",
       "      <td>11</td>\n",
       "      <td>1.944544</td>\n",
       "      <td>cde</td>\n",
       "      <td>1.944544</td>\n",
       "      <td>17.0</td>\n",
       "      <td>0.532258</td>\n",
       "      <td>0.766129</td>\n",
       "      <td>0.726158</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>22</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>33</td>\n",
       "      <td>58</td>\n",
       "      <td>-1</td>\n",
       "      <td>32</td>\n",
       "      <td>9</td>\n",
       "      <td>-13</td>\n",
       "      <td>-2.298097</td>\n",
       "      <td>abd</td>\n",
       "      <td>2.298097</td>\n",
       "      <td>18.0</td>\n",
       "      <td>0.564516</td>\n",
       "      <td>0.782258</td>\n",
       "      <td>0.779842</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>8</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>20</td>\n",
       "      <td>-8</td>\n",
       "      <td>16</td>\n",
       "      <td>13</td>\n",
       "      <td>30</td>\n",
       "      <td>-15</td>\n",
       "      <td>-2.651650</td>\n",
       "      <td>e</td>\n",
       "      <td>2.651650</td>\n",
       "      <td>19.0</td>\n",
       "      <td>0.596774</td>\n",
       "      <td>0.798387</td>\n",
       "      <td>0.835874</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>19</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>31</td>\n",
       "      <td>53</td>\n",
       "      <td>20</td>\n",
       "      <td>15</td>\n",
       "      <td>-2</td>\n",
       "      <td>-15</td>\n",
       "      <td>-2.651650</td>\n",
       "      <td>bcd</td>\n",
       "      <td>2.651650</td>\n",
       "      <td>20.0</td>\n",
       "      <td>0.629032</td>\n",
       "      <td>0.814516</td>\n",
       "      <td>0.894662</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20</th>\n",
       "      <td>11</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>24</td>\n",
       "      <td>-3</td>\n",
       "      <td>24</td>\n",
       "      <td>9</td>\n",
       "      <td>-4</td>\n",
       "      <td>-19</td>\n",
       "      <td>-3.358757</td>\n",
       "      <td>bce</td>\n",
       "      <td>3.358757</td>\n",
       "      <td>21.0</td>\n",
       "      <td>0.661290</td>\n",
       "      <td>0.830645</td>\n",
       "      <td>0.956718</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>21</th>\n",
       "      <td>24</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>14</td>\n",
       "      <td>-2</td>\n",
       "      <td>8</td>\n",
       "      <td>1</td>\n",
       "      <td>-2</td>\n",
       "      <td>-19</td>\n",
       "      <td>-3.358757</td>\n",
       "      <td>de</td>\n",
       "      <td>3.358757</td>\n",
       "      <td>22.0</td>\n",
       "      <td>0.693548</td>\n",
       "      <td>0.846774</td>\n",
       "      <td>1.022696</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22</th>\n",
       "      <td>21</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>26</td>\n",
       "      <td>60</td>\n",
       "      <td>14</td>\n",
       "      <td>9</td>\n",
       "      <td>-23</td>\n",
       "      <td>-21</td>\n",
       "      <td>-3.712311</td>\n",
       "      <td>acd</td>\n",
       "      <td>3.712311</td>\n",
       "      <td>23.0</td>\n",
       "      <td>0.725806</td>\n",
       "      <td>0.862903</td>\n",
       "      <td>1.093456</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>23</th>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>30</td>\n",
       "      <td>55</td>\n",
       "      <td>96</td>\n",
       "      <td>19</td>\n",
       "      <td>22</td>\n",
       "      <td>-27</td>\n",
       "      <td>-4.772971</td>\n",
       "      <td>bc</td>\n",
       "      <td>4.772971</td>\n",
       "      <td>24.0</td>\n",
       "      <td>0.758065</td>\n",
       "      <td>0.879032</td>\n",
       "      <td>1.170163</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>24</th>\n",
       "      <td>20</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>24</td>\n",
       "      <td>57</td>\n",
       "      <td>-3</td>\n",
       "      <td>23</td>\n",
       "      <td>27</td>\n",
       "      <td>37</td>\n",
       "      <td>6.540738</td>\n",
       "      <td>ad</td>\n",
       "      <td>6.540738</td>\n",
       "      <td>25.0</td>\n",
       "      <td>0.790323</td>\n",
       "      <td>0.895161</td>\n",
       "      <td>1.254453</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25</th>\n",
       "      <td>16</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>23</td>\n",
       "      <td>38</td>\n",
       "      <td>-8</td>\n",
       "      <td>33</td>\n",
       "      <td>24</td>\n",
       "      <td>41</td>\n",
       "      <td>7.247845</td>\n",
       "      <td>d</td>\n",
       "      <td>7.247845</td>\n",
       "      <td>26.0</td>\n",
       "      <td>0.822581</td>\n",
       "      <td>0.911290</td>\n",
       "      <td>1.348744</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>26</th>\n",
       "      <td>6</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>27</td>\n",
       "      <td>61</td>\n",
       "      <td>119</td>\n",
       "      <td>210</td>\n",
       "      <td>59</td>\n",
       "      <td>43</td>\n",
       "      <td>7.601398</td>\n",
       "      <td>ab</td>\n",
       "      <td>7.601398</td>\n",
       "      <td>27.0</td>\n",
       "      <td>0.854839</td>\n",
       "      <td>0.927419</td>\n",
       "      <td>1.456837</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>27</th>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>24</td>\n",
       "      <td>47</td>\n",
       "      <td>95</td>\n",
       "      <td>-11</td>\n",
       "      <td>56</td>\n",
       "      <td>51</td>\n",
       "      <td>9.015611</td>\n",
       "      <td>c</td>\n",
       "      <td>9.015611</td>\n",
       "      <td>28.0</td>\n",
       "      <td>0.887097</td>\n",
       "      <td>0.943548</td>\n",
       "      <td>1.585278</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>28</th>\n",
       "      <td>4</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>15</td>\n",
       "      <td>54</td>\n",
       "      <td>105</td>\n",
       "      <td>227</td>\n",
       "      <td>409</td>\n",
       "      <td>53</td>\n",
       "      <td>9.369165</td>\n",
       "      <td>a</td>\n",
       "      <td>9.369165</td>\n",
       "      <td>29.0</td>\n",
       "      <td>0.919355</td>\n",
       "      <td>0.959677</td>\n",
       "      <td>1.746955</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>29</th>\n",
       "      <td>12</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>18</td>\n",
       "      <td>0</td>\n",
       "      <td>17</td>\n",
       "      <td>11</td>\n",
       "      <td>11</td>\n",
       "      <td>65</td>\n",
       "      <td>11.490485</td>\n",
       "      <td>ae</td>\n",
       "      <td>11.490485</td>\n",
       "      <td>30.0</td>\n",
       "      <td>0.951613</td>\n",
       "      <td>0.975806</td>\n",
       "      <td>1.973953</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>30</th>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>27</td>\n",
       "      <td>44</td>\n",
       "      <td>108</td>\n",
       "      <td>199</td>\n",
       "      <td>-6</td>\n",
       "      <td>119</td>\n",
       "      <td>21.036427</td>\n",
       "      <td>b</td>\n",
       "      <td>21.036427</td>\n",
       "      <td>31.0</td>\n",
       "      <td>0.983871</td>\n",
       "      <td>0.991935</td>\n",
       "      <td>2.405983</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "    index  A  B  C  D  E   y  step_1  step_2  step_3  step_4  step_5  \\\n",
       "0      14  1  1  0  0  1  32       1       9      18      21      -1   \n",
       "1      31  1  1  1  1  1  36      11       2      -2       1      -3   \n",
       "2      27  0  1  1  1  1  25       9       4      -3       4      -3   \n",
       "3       9  0  0  1  0  1  21       1      19       5     -10       3   \n",
       "4      15  1  1  1  0  1  34       2       8       0      -9      -3   \n",
       "5      29  1  0  1  1  1  31      12       6       1      -9       3   \n",
       "6      28  1  0  0  1  1  22       7       5      -5       9       5   \n",
       "7      30  1  1  0  1  1  36      10       5     -16      -9      -5   \n",
       "8      23  1  1  1  1  0  33      61      20       6      -5       5   \n",
       "9       7  1  1  1  0  0  31      64     114      40      21      -7   \n",
       "10     17  0  0  1  1  0  29      36       5      13      -4       7   \n",
       "11      5  1  0  1  0  0  20      61     104       5      63       7   \n",
       "12     10  0  1  0  0  1  25      -4      14       9      16       7   \n",
       "13     18  0  1  0  1  0  28      46       6      31      -2      -9   \n",
       "14     26  0  1  0  1  1  24       4       4      -7     -12      11   \n",
       "15     13  1  0  1  0  1  25       5      12      -7       1      11   \n",
       "16     25  0  0  1  1  1  22       8       9      -3      -6      11   \n",
       "17     22  1  1  0  1  0  33      58      -1      32       9     -13   \n",
       "18      8  0  0  0  0  1  20      -8      16      13      30     -15   \n",
       "19     19  0  1  1  1  0  31      53      20      15      -2     -15   \n",
       "20     11  0  1  1  0  1  24      -3      24       9      -4     -19   \n",
       "21     24  0  0  0  1  1  14      -2       8       1      -2     -19   \n",
       "22     21  1  0  1  1  0  26      60      14       9     -23     -21   \n",
       "23      3  0  1  1  0  0  30      55      96      19      22     -27   \n",
       "24     20  1  0  0  1  0  24      57      -3      23      27      37   \n",
       "25     16  0  0  0  1  0  23      38      -8      33      24      41   \n",
       "26      6  1  1  0  0  0  27      61     119     210      59      43   \n",
       "27      1  0  0  1  0  0  24      47      95     -11      56      51   \n",
       "28      4  1  0  0  0  0  15      54     105     227     409      53   \n",
       "29     12  1  0  0  0  1  18       0      17      11      11      65   \n",
       "30      2  0  1  0  0  0  27      44     108     199      -6     119   \n",
       "\n",
       "    std_effect effect  abs_std_effect   r_i      r_i*       p_i       v_i  \n",
       "0    -0.176777    abe        0.176777   1.0  0.016129  0.508065  0.020216  \n",
       "1    -0.530330  abcde        0.530330   2.0  0.048387  0.524194  0.060681  \n",
       "2    -0.530330   bcde        0.530330   3.0  0.080645  0.540323  0.101246  \n",
       "3     0.530330     ce        0.530330   4.0  0.112903  0.556452  0.141979  \n",
       "4    -0.530330   abce        0.530330   5.0  0.145161  0.572581  0.182948  \n",
       "5     0.530330   acde        0.530330   6.0  0.177419  0.588710  0.224227  \n",
       "6     0.883883    ade        0.883883   7.0  0.209677  0.604839  0.265892  \n",
       "7    -0.883883   abde        0.883883   8.0  0.241935  0.620968  0.308023  \n",
       "8     0.883883   abcd        0.883883   9.0  0.274194  0.637097  0.350709  \n",
       "9    -1.237437    abc        1.237437  10.0  0.306452  0.653226  0.394044  \n",
       "10    1.237437     cd        1.237437  11.0  0.338710  0.669355  0.438132  \n",
       "11    1.237437     ac        1.237437  12.0  0.370968  0.685484  0.483089  \n",
       "12    1.237437     be        1.237437  13.0  0.403226  0.701613  0.529045  \n",
       "13   -1.590990     bd        1.590990  14.0  0.435484  0.717742  0.576147  \n",
       "14    1.944544    bde        1.944544  15.0  0.467742  0.733871  0.624563  \n",
       "15    1.944544    ace        1.944544  16.0  0.500000  0.750000  0.674490  \n",
       "16    1.944544    cde        1.944544  17.0  0.532258  0.766129  0.726158  \n",
       "17   -2.298097    abd        2.298097  18.0  0.564516  0.782258  0.779842  \n",
       "18   -2.651650      e        2.651650  19.0  0.596774  0.798387  0.835874  \n",
       "19   -2.651650    bcd        2.651650  20.0  0.629032  0.814516  0.894662  \n",
       "20   -3.358757    bce        3.358757  21.0  0.661290  0.830645  0.956718  \n",
       "21   -3.358757     de        3.358757  22.0  0.693548  0.846774  1.022696  \n",
       "22   -3.712311    acd        3.712311  23.0  0.725806  0.862903  1.093456  \n",
       "23   -4.772971     bc        4.772971  24.0  0.758065  0.879032  1.170163  \n",
       "24    6.540738     ad        6.540738  25.0  0.790323  0.895161  1.254453  \n",
       "25    7.247845      d        7.247845  26.0  0.822581  0.911290  1.348744  \n",
       "26    7.601398     ab        7.601398  27.0  0.854839  0.927419  1.456837  \n",
       "27    9.015611      c        9.015611  28.0  0.887097  0.943548  1.585278  \n",
       "28    9.369165      a        9.369165  29.0  0.919355  0.959677  1.746955  \n",
       "29   11.490485     ae       11.490485  30.0  0.951613  0.975806  1.973953  \n",
       "30   21.036427      b       21.036427  31.0  0.983871  0.991935  2.405983  "
      ]
     },
     "execution_count": 149,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "q2_hn = HalfNormPlot(data=q2_yates.iloc[1:,:], data_col='std_effect', label_col='effect')\n",
    "q2_hn.half_norm_data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 150,
   "id": "1c3d6a6d",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 800x800 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "q2_hn.plot_half_norm(title=\"Assignment 3 Question 2 Half Normal Plot\", data_percent=.75);"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 151,
   "id": "a0706964",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 800x800 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "q2_hn.plot_half_norm(title=\"Half Normal Plot Removing Significant Effects\", num_adjust=8);"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 152,
   "id": "9d035d85",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Experimental error etimate is 3.12580\n"
     ]
    }
   ],
   "source": [
    "print(f\"Experimental error etimate is {q2_hn.sigma_from_adjusted_regression():.05f}\")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "46ba2741",
   "metadata": {},
   "source": [
    "The effects that appear to be significant using the half normal plotting technique are main effects $A, B, C, D$ and interaction effects $B*C, A*D, A*B, A*E$  These are the same effects identified in the ANOVA analysis above!"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "067f56d4",
   "metadata": {},
   "source": [
    "#### c.\n",
    "The ANOVA will be re-run with an identifier for the Block in the formula.  We will assign test runs to blocks by using the \"even/odd\" method wherein each test run that has a positive treatment design for $A*B*C*D*E$ is in one block and each test run that has an odd treatment deisgn for $A*B*C*D*E$ will be in block two."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 156,
   "id": "8c2ecb0e",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "block 1    16\n",
       "block 2    16\n",
       "Name: block, dtype: int64"
      ]
     },
     "execution_count": 156,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#assign blocks\n",
    "q2_fixed['treatment_sum'] = q2_fixed[['A','B','C','D','E']].apply(sum, axis=1)\n",
    "q2_fixed['block'] = q2_fixed['treatment_sum'].apply(lambda x: 'block 1' if x%2 == 0 else 'block 2')\n",
    "q2_fixed.block.value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 158,
   "id": "03696bbd",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>index</th>\n",
       "      <th>A</th>\n",
       "      <th>B</th>\n",
       "      <th>C</th>\n",
       "      <th>D</th>\n",
       "      <th>E</th>\n",
       "      <th>y</th>\n",
       "      <th>treatment_sum</th>\n",
       "      <th>block</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>23</td>\n",
       "      <td>0</td>\n",
       "      <td>block 1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>29</th>\n",
       "      <td>29</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>31</td>\n",
       "      <td>4</td>\n",
       "      <td>block 1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>27</th>\n",
       "      <td>30</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>36</td>\n",
       "      <td>4</td>\n",
       "      <td>block 1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>24</th>\n",
       "      <td>24</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>14</td>\n",
       "      <td>2</td>\n",
       "      <td>block 1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>23</th>\n",
       "      <td>15</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>34</td>\n",
       "      <td>4</td>\n",
       "      <td>block 1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20</th>\n",
       "      <td>9</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>21</td>\n",
       "      <td>2</td>\n",
       "      <td>block 1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>10</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>25</td>\n",
       "      <td>2</td>\n",
       "      <td>block 1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>12</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>18</td>\n",
       "      <td>2</td>\n",
       "      <td>block 1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>30</th>\n",
       "      <td>27</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>25</td>\n",
       "      <td>4</td>\n",
       "      <td>block 1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>17</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>29</td>\n",
       "      <td>2</td>\n",
       "      <td>block 1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>23</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>33</td>\n",
       "      <td>4</td>\n",
       "      <td>block 1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>20</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>24</td>\n",
       "      <td>2</td>\n",
       "      <td>block 1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>30</td>\n",
       "      <td>2</td>\n",
       "      <td>block 1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>6</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>27</td>\n",
       "      <td>2</td>\n",
       "      <td>block 1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>5</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>20</td>\n",
       "      <td>2</td>\n",
       "      <td>block 1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>18</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>28</td>\n",
       "      <td>2</td>\n",
       "      <td>block 1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>22</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>33</td>\n",
       "      <td>3</td>\n",
       "      <td>block 2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>4</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>15</td>\n",
       "      <td>1</td>\n",
       "      <td>block 2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>28</th>\n",
       "      <td>25</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>22</td>\n",
       "      <td>3</td>\n",
       "      <td>block 2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>27</td>\n",
       "      <td>1</td>\n",
       "      <td>block 2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>26</th>\n",
       "      <td>26</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>24</td>\n",
       "      <td>3</td>\n",
       "      <td>block 2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25</th>\n",
       "      <td>28</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>22</td>\n",
       "      <td>3</td>\n",
       "      <td>block 2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>24</td>\n",
       "      <td>1</td>\n",
       "      <td>block 2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>21</th>\n",
       "      <td>13</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>25</td>\n",
       "      <td>3</td>\n",
       "      <td>block 2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>14</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>32</td>\n",
       "      <td>3</td>\n",
       "      <td>block 2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>7</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>31</td>\n",
       "      <td>3</td>\n",
       "      <td>block 2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>8</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>20</td>\n",
       "      <td>1</td>\n",
       "      <td>block 2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>16</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>23</td>\n",
       "      <td>1</td>\n",
       "      <td>block 2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>19</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>31</td>\n",
       "      <td>3</td>\n",
       "      <td>block 2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>21</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>26</td>\n",
       "      <td>3</td>\n",
       "      <td>block 2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22</th>\n",
       "      <td>11</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>24</td>\n",
       "      <td>3</td>\n",
       "      <td>block 2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>31</th>\n",
       "      <td>31</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>36</td>\n",
       "      <td>5</td>\n",
       "      <td>block 2</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "    index  A  B  C  D  E   y  treatment_sum    block\n",
       "0       0  0  0  0  0  0  23              0  block 1\n",
       "29     29  1  0  1  1  1  31              4  block 1\n",
       "27     30  1  1  0  1  1  36              4  block 1\n",
       "24     24  0  0  0  1  1  14              2  block 1\n",
       "23     15  1  1  1  0  1  34              4  block 1\n",
       "20      9  0  0  1  0  1  21              2  block 1\n",
       "18     10  0  1  0  0  1  25              2  block 1\n",
       "17     12  1  0  0  0  1  18              2  block 1\n",
       "30     27  0  1  1  1  1  25              4  block 1\n",
       "12     17  0  0  1  1  0  29              2  block 1\n",
       "15     23  1  1  1  1  0  33              4  block 1\n",
       "9      20  1  0  0  1  0  24              2  block 1\n",
       "6       3  0  1  1  0  0  30              2  block 1\n",
       "3       6  1  1  0  0  0  27              2  block 1\n",
       "5       5  1  0  1  0  0  20              2  block 1\n",
       "10     18  0  1  0  1  0  28              2  block 1\n",
       "11     22  1  1  0  1  0  33              3  block 2\n",
       "1       4  1  0  0  0  0  15              1  block 2\n",
       "28     25  0  0  1  1  1  22              3  block 2\n",
       "2       2  0  1  0  0  0  27              1  block 2\n",
       "26     26  0  1  0  1  1  24              3  block 2\n",
       "25     28  1  0  0  1  1  22              3  block 2\n",
       "4       1  0  0  1  0  0  24              1  block 2\n",
       "21     13  1  0  1  0  1  25              3  block 2\n",
       "19     14  1  1  0  0  1  32              3  block 2\n",
       "7       7  1  1  1  0  0  31              3  block 2\n",
       "16      8  0  0  0  0  1  20              1  block 2\n",
       "8      16  0  0  0  1  0  23              1  block 2\n",
       "14     19  0  1  1  1  0  31              3  block 2\n",
       "13     21  1  0  1  1  0  26              3  block 2\n",
       "22     11  0  1  1  0  1  24              3  block 2\n",
       "31     31  1  1  1  1  1  36              5  block 2"
      ]
     },
     "execution_count": 158,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "q2_fixed.sort_values(by='block')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 160,
   "id": "e3ebabd1",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>df</th>\n",
       "      <th>sum_sq</th>\n",
       "      <th>mean_sq</th>\n",
       "      <th>F</th>\n",
       "      <th>PR(&gt;F)</th>\n",
       "      <th>significant</th>\n",
       "      <th>std_effects</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>block</th>\n",
       "      <td>1.0</td>\n",
       "      <td>0.28125</td>\n",
       "      <td>0.281250</td>\n",
       "      <td>0.078901</td>\n",
       "      <td>7.826294e-01</td>\n",
       "      <td>False</td>\n",
       "      <td>0.530330</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>A</th>\n",
       "      <td>1.0</td>\n",
       "      <td>87.78125</td>\n",
       "      <td>87.781250</td>\n",
       "      <td>24.625950</td>\n",
       "      <td>1.703352e-04</td>\n",
       "      <td>True</td>\n",
       "      <td>9.369165</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>B</th>\n",
       "      <td>1.0</td>\n",
       "      <td>442.53125</td>\n",
       "      <td>442.531250</td>\n",
       "      <td>124.146698</td>\n",
       "      <td>1.183118e-08</td>\n",
       "      <td>True</td>\n",
       "      <td>21.036427</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>C</th>\n",
       "      <td>1.0</td>\n",
       "      <td>81.28125</td>\n",
       "      <td>81.281250</td>\n",
       "      <td>22.802455</td>\n",
       "      <td>2.455562e-04</td>\n",
       "      <td>True</td>\n",
       "      <td>9.015611</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>D</th>\n",
       "      <td>1.0</td>\n",
       "      <td>52.53125</td>\n",
       "      <td>52.531250</td>\n",
       "      <td>14.736996</td>\n",
       "      <td>1.610081e-03</td>\n",
       "      <td>True</td>\n",
       "      <td>7.247845</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>E</th>\n",
       "      <td>1.0</td>\n",
       "      <td>7.03125</td>\n",
       "      <td>7.031250</td>\n",
       "      <td>1.972531</td>\n",
       "      <td>1.805473e-01</td>\n",
       "      <td>False</td>\n",
       "      <td>2.651650</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>A:B</th>\n",
       "      <td>1.0</td>\n",
       "      <td>57.78125</td>\n",
       "      <td>57.781250</td>\n",
       "      <td>16.209819</td>\n",
       "      <td>1.099308e-03</td>\n",
       "      <td>True</td>\n",
       "      <td>7.601398</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>A:C</th>\n",
       "      <td>1.0</td>\n",
       "      <td>1.53125</td>\n",
       "      <td>1.531250</td>\n",
       "      <td>0.429573</td>\n",
       "      <td>5.221242e-01</td>\n",
       "      <td>False</td>\n",
       "      <td>1.237437</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>A:D</th>\n",
       "      <td>1.0</td>\n",
       "      <td>42.78125</td>\n",
       "      <td>42.781250</td>\n",
       "      <td>12.001753</td>\n",
       "      <td>3.468159e-03</td>\n",
       "      <td>True</td>\n",
       "      <td>6.540738</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>A:E</th>\n",
       "      <td>1.0</td>\n",
       "      <td>132.03125</td>\n",
       "      <td>132.031250</td>\n",
       "      <td>37.039743</td>\n",
       "      <td>2.083599e-05</td>\n",
       "      <td>True</td>\n",
       "      <td>11.490485</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>B:C</th>\n",
       "      <td>1.0</td>\n",
       "      <td>22.78125</td>\n",
       "      <td>22.781250</td>\n",
       "      <td>6.390999</td>\n",
       "      <td>2.318464e-02</td>\n",
       "      <td>True</td>\n",
       "      <td>4.772971</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>B:D</th>\n",
       "      <td>1.0</td>\n",
       "      <td>2.53125</td>\n",
       "      <td>2.531250</td>\n",
       "      <td>0.710111</td>\n",
       "      <td>4.126425e-01</td>\n",
       "      <td>False</td>\n",
       "      <td>1.590990</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>B:E</th>\n",
       "      <td>1.0</td>\n",
       "      <td>1.53125</td>\n",
       "      <td>1.531250</td>\n",
       "      <td>0.429573</td>\n",
       "      <td>5.221242e-01</td>\n",
       "      <td>False</td>\n",
       "      <td>1.237437</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>C:D</th>\n",
       "      <td>1.0</td>\n",
       "      <td>1.53125</td>\n",
       "      <td>1.531250</td>\n",
       "      <td>0.429573</td>\n",
       "      <td>5.221242e-01</td>\n",
       "      <td>False</td>\n",
       "      <td>1.237437</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>C:E</th>\n",
       "      <td>1.0</td>\n",
       "      <td>0.28125</td>\n",
       "      <td>0.281250</td>\n",
       "      <td>0.078901</td>\n",
       "      <td>7.826294e-01</td>\n",
       "      <td>False</td>\n",
       "      <td>0.530330</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>D:E</th>\n",
       "      <td>1.0</td>\n",
       "      <td>11.28125</td>\n",
       "      <td>11.281250</td>\n",
       "      <td>3.164816</td>\n",
       "      <td>9.550809e-02</td>\n",
       "      <td>False</td>\n",
       "      <td>3.358757</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Residual</th>\n",
       "      <td>15.0</td>\n",
       "      <td>53.46875</td>\n",
       "      <td>3.564583</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>False</td>\n",
       "      <td>1.888010</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "            df     sum_sq     mean_sq           F        PR(>F)  significant  \\\n",
       "block      1.0    0.28125    0.281250    0.078901  7.826294e-01        False   \n",
       "A          1.0   87.78125   87.781250   24.625950  1.703352e-04         True   \n",
       "B          1.0  442.53125  442.531250  124.146698  1.183118e-08         True   \n",
       "C          1.0   81.28125   81.281250   22.802455  2.455562e-04         True   \n",
       "D          1.0   52.53125   52.531250   14.736996  1.610081e-03         True   \n",
       "E          1.0    7.03125    7.031250    1.972531  1.805473e-01        False   \n",
       "A:B        1.0   57.78125   57.781250   16.209819  1.099308e-03         True   \n",
       "A:C        1.0    1.53125    1.531250    0.429573  5.221242e-01        False   \n",
       "A:D        1.0   42.78125   42.781250   12.001753  3.468159e-03         True   \n",
       "A:E        1.0  132.03125  132.031250   37.039743  2.083599e-05         True   \n",
       "B:C        1.0   22.78125   22.781250    6.390999  2.318464e-02         True   \n",
       "B:D        1.0    2.53125    2.531250    0.710111  4.126425e-01        False   \n",
       "B:E        1.0    1.53125    1.531250    0.429573  5.221242e-01        False   \n",
       "C:D        1.0    1.53125    1.531250    0.429573  5.221242e-01        False   \n",
       "C:E        1.0    0.28125    0.281250    0.078901  7.826294e-01        False   \n",
       "D:E        1.0   11.28125   11.281250    3.164816  9.550809e-02        False   \n",
       "Residual  15.0   53.46875    3.564583         NaN           NaN        False   \n",
       "\n",
       "          std_effects  \n",
       "block        0.530330  \n",
       "A            9.369165  \n",
       "B           21.036427  \n",
       "C            9.015611  \n",
       "D            7.247845  \n",
       "E            2.651650  \n",
       "A:B          7.601398  \n",
       "A:C          1.237437  \n",
       "A:D          6.540738  \n",
       "A:E         11.490485  \n",
       "B:C          4.772971  \n",
       "B:D          1.590990  \n",
       "B:E          1.237437  \n",
       "C:D          1.237437  \n",
       "C:E          0.530330  \n",
       "D:E          3.358757  \n",
       "Residual     1.888010  "
      ]
     },
     "execution_count": 160,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "q2_lm = ols('y ~ block + A + B + C + D + E + A:B + A:C + A:D + A:E + B:C + B:D + B:E + C:D + C:E + D:E', data=q2_fixed).fit()\n",
    "q2_anova = sm.stats.anova_lm(q2_lm, typ=1)\n",
    "q2_anova['significant'] = q2_anova['PR(>F)'].apply(lambda x: True if x < .05 else False)\n",
    "q2_anova['std_effects'] = q2_anova['mean_sq']**.5\n",
    "q2_anova"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "93abc9f1",
   "metadata": {},
   "source": [
    "The previously identified factors are still significant and no other factors have become significant, in addition the estimate of the experimental error has decreased by a marginal amount, ~.03. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 161,
   "id": "2454ef39",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 800x800 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "q2_hn.plot_half_norm(title=\"Assignment 3 Question 2 Half Normal Plot\", data_percent=.75);"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 162,
   "id": "6e3469cc",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 800x800 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "q2_hn.plot_half_norm(title=\"Half Normal Plot Removing Significant Effects\", num_adjust=8);"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 163,
   "id": "d8a5f1fc",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>index</th>\n",
       "      <th>A</th>\n",
       "      <th>B</th>\n",
       "      <th>C</th>\n",
       "      <th>D</th>\n",
       "      <th>E</th>\n",
       "      <th>y</th>\n",
       "      <th>step_1</th>\n",
       "      <th>step_2</th>\n",
       "      <th>step_3</th>\n",
       "      <th>step_4</th>\n",
       "      <th>step_5</th>\n",
       "      <th>std_effect</th>\n",
       "      <th>effect</th>\n",
       "      <th>abs_std_effect</th>\n",
       "      <th>r_i</th>\n",
       "      <th>r_i*</th>\n",
       "      <th>p_i</th>\n",
       "      <th>v_i</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>14</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>32</td>\n",
       "      <td>1</td>\n",
       "      <td>9</td>\n",
       "      <td>18</td>\n",
       "      <td>21</td>\n",
       "      <td>-1</td>\n",
       "      <td>-0.176777</td>\n",
       "      <td>abe</td>\n",
       "      <td>0.176777</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.016129</td>\n",
       "      <td>0.508065</td>\n",
       "      <td>0.020216</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>31</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>36</td>\n",
       "      <td>11</td>\n",
       "      <td>2</td>\n",
       "      <td>-2</td>\n",
       "      <td>1</td>\n",
       "      <td>-3</td>\n",
       "      <td>-0.530330</td>\n",
       "      <td>abcde</td>\n",
       "      <td>0.530330</td>\n",
       "      <td>2.0</td>\n",
       "      <td>0.048387</td>\n",
       "      <td>0.524194</td>\n",
       "      <td>0.060681</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>27</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>25</td>\n",
       "      <td>9</td>\n",
       "      <td>4</td>\n",
       "      <td>-3</td>\n",
       "      <td>4</td>\n",
       "      <td>-3</td>\n",
       "      <td>-0.530330</td>\n",
       "      <td>bcde</td>\n",
       "      <td>0.530330</td>\n",
       "      <td>3.0</td>\n",
       "      <td>0.080645</td>\n",
       "      <td>0.540323</td>\n",
       "      <td>0.101246</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>9</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>21</td>\n",
       "      <td>1</td>\n",
       "      <td>19</td>\n",
       "      <td>5</td>\n",
       "      <td>-10</td>\n",
       "      <td>3</td>\n",
       "      <td>0.530330</td>\n",
       "      <td>ce</td>\n",
       "      <td>0.530330</td>\n",
       "      <td>4.0</td>\n",
       "      <td>0.112903</td>\n",
       "      <td>0.556452</td>\n",
       "      <td>0.141979</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>15</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>34</td>\n",
       "      <td>2</td>\n",
       "      <td>8</td>\n",
       "      <td>0</td>\n",
       "      <td>-9</td>\n",
       "      <td>-3</td>\n",
       "      <td>-0.530330</td>\n",
       "      <td>abce</td>\n",
       "      <td>0.530330</td>\n",
       "      <td>5.0</td>\n",
       "      <td>0.145161</td>\n",
       "      <td>0.572581</td>\n",
       "      <td>0.182948</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>29</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>31</td>\n",
       "      <td>12</td>\n",
       "      <td>6</td>\n",
       "      <td>1</td>\n",
       "      <td>-9</td>\n",
       "      <td>3</td>\n",
       "      <td>0.530330</td>\n",
       "      <td>acde</td>\n",
       "      <td>0.530330</td>\n",
       "      <td>6.0</td>\n",
       "      <td>0.177419</td>\n",
       "      <td>0.588710</td>\n",
       "      <td>0.224227</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>28</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>22</td>\n",
       "      <td>7</td>\n",
       "      <td>5</td>\n",
       "      <td>-5</td>\n",
       "      <td>9</td>\n",
       "      <td>5</td>\n",
       "      <td>0.883883</td>\n",
       "      <td>ade</td>\n",
       "      <td>0.883883</td>\n",
       "      <td>7.0</td>\n",
       "      <td>0.209677</td>\n",
       "      <td>0.604839</td>\n",
       "      <td>0.265892</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>30</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>36</td>\n",
       "      <td>10</td>\n",
       "      <td>5</td>\n",
       "      <td>-16</td>\n",
       "      <td>-9</td>\n",
       "      <td>-5</td>\n",
       "      <td>-0.883883</td>\n",
       "      <td>abde</td>\n",
       "      <td>0.883883</td>\n",
       "      <td>8.0</td>\n",
       "      <td>0.241935</td>\n",
       "      <td>0.620968</td>\n",
       "      <td>0.308023</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>23</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>33</td>\n",
       "      <td>61</td>\n",
       "      <td>20</td>\n",
       "      <td>6</td>\n",
       "      <td>-5</td>\n",
       "      <td>5</td>\n",
       "      <td>0.883883</td>\n",
       "      <td>abcd</td>\n",
       "      <td>0.883883</td>\n",
       "      <td>9.0</td>\n",
       "      <td>0.274194</td>\n",
       "      <td>0.637097</td>\n",
       "      <td>0.350709</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>7</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>31</td>\n",
       "      <td>64</td>\n",
       "      <td>114</td>\n",
       "      <td>40</td>\n",
       "      <td>21</td>\n",
       "      <td>-7</td>\n",
       "      <td>-1.237437</td>\n",
       "      <td>abc</td>\n",
       "      <td>1.237437</td>\n",
       "      <td>10.0</td>\n",
       "      <td>0.306452</td>\n",
       "      <td>0.653226</td>\n",
       "      <td>0.394044</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>17</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>29</td>\n",
       "      <td>36</td>\n",
       "      <td>5</td>\n",
       "      <td>13</td>\n",
       "      <td>-4</td>\n",
       "      <td>7</td>\n",
       "      <td>1.237437</td>\n",
       "      <td>cd</td>\n",
       "      <td>1.237437</td>\n",
       "      <td>11.0</td>\n",
       "      <td>0.338710</td>\n",
       "      <td>0.669355</td>\n",
       "      <td>0.438132</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>5</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>20</td>\n",
       "      <td>61</td>\n",
       "      <td>104</td>\n",
       "      <td>5</td>\n",
       "      <td>63</td>\n",
       "      <td>7</td>\n",
       "      <td>1.237437</td>\n",
       "      <td>ac</td>\n",
       "      <td>1.237437</td>\n",
       "      <td>12.0</td>\n",
       "      <td>0.370968</td>\n",
       "      <td>0.685484</td>\n",
       "      <td>0.483089</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>10</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>25</td>\n",
       "      <td>-4</td>\n",
       "      <td>14</td>\n",
       "      <td>9</td>\n",
       "      <td>16</td>\n",
       "      <td>7</td>\n",
       "      <td>1.237437</td>\n",
       "      <td>be</td>\n",
       "      <td>1.237437</td>\n",
       "      <td>13.0</td>\n",
       "      <td>0.403226</td>\n",
       "      <td>0.701613</td>\n",
       "      <td>0.529045</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>18</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>28</td>\n",
       "      <td>46</td>\n",
       "      <td>6</td>\n",
       "      <td>31</td>\n",
       "      <td>-2</td>\n",
       "      <td>-9</td>\n",
       "      <td>-1.590990</td>\n",
       "      <td>bd</td>\n",
       "      <td>1.590990</td>\n",
       "      <td>14.0</td>\n",
       "      <td>0.435484</td>\n",
       "      <td>0.717742</td>\n",
       "      <td>0.576147</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>25</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>22</td>\n",
       "      <td>8</td>\n",
       "      <td>9</td>\n",
       "      <td>-3</td>\n",
       "      <td>-6</td>\n",
       "      <td>11</td>\n",
       "      <td>1.944544</td>\n",
       "      <td>cde</td>\n",
       "      <td>1.944544</td>\n",
       "      <td>17.0</td>\n",
       "      <td>0.532258</td>\n",
       "      <td>0.766129</td>\n",
       "      <td>0.726158</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>13</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>25</td>\n",
       "      <td>5</td>\n",
       "      <td>12</td>\n",
       "      <td>-7</td>\n",
       "      <td>1</td>\n",
       "      <td>11</td>\n",
       "      <td>1.944544</td>\n",
       "      <td>ace</td>\n",
       "      <td>1.944544</td>\n",
       "      <td>16.0</td>\n",
       "      <td>0.500000</td>\n",
       "      <td>0.750000</td>\n",
       "      <td>0.674490</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>26</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>24</td>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "      <td>-7</td>\n",
       "      <td>-12</td>\n",
       "      <td>11</td>\n",
       "      <td>1.944544</td>\n",
       "      <td>bde</td>\n",
       "      <td>1.944544</td>\n",
       "      <td>15.0</td>\n",
       "      <td>0.467742</td>\n",
       "      <td>0.733871</td>\n",
       "      <td>0.624563</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>22</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>33</td>\n",
       "      <td>58</td>\n",
       "      <td>-1</td>\n",
       "      <td>32</td>\n",
       "      <td>9</td>\n",
       "      <td>-13</td>\n",
       "      <td>-2.298097</td>\n",
       "      <td>abd</td>\n",
       "      <td>2.298097</td>\n",
       "      <td>18.0</td>\n",
       "      <td>0.564516</td>\n",
       "      <td>0.782258</td>\n",
       "      <td>0.779842</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>8</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>20</td>\n",
       "      <td>-8</td>\n",
       "      <td>16</td>\n",
       "      <td>13</td>\n",
       "      <td>30</td>\n",
       "      <td>-15</td>\n",
       "      <td>-2.651650</td>\n",
       "      <td>e</td>\n",
       "      <td>2.651650</td>\n",
       "      <td>19.0</td>\n",
       "      <td>0.596774</td>\n",
       "      <td>0.798387</td>\n",
       "      <td>0.835874</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>19</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>31</td>\n",
       "      <td>53</td>\n",
       "      <td>20</td>\n",
       "      <td>15</td>\n",
       "      <td>-2</td>\n",
       "      <td>-15</td>\n",
       "      <td>-2.651650</td>\n",
       "      <td>bcd</td>\n",
       "      <td>2.651650</td>\n",
       "      <td>20.0</td>\n",
       "      <td>0.629032</td>\n",
       "      <td>0.814516</td>\n",
       "      <td>0.894662</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20</th>\n",
       "      <td>11</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>24</td>\n",
       "      <td>-3</td>\n",
       "      <td>24</td>\n",
       "      <td>9</td>\n",
       "      <td>-4</td>\n",
       "      <td>-19</td>\n",
       "      <td>-3.358757</td>\n",
       "      <td>bce</td>\n",
       "      <td>3.358757</td>\n",
       "      <td>21.0</td>\n",
       "      <td>0.661290</td>\n",
       "      <td>0.830645</td>\n",
       "      <td>0.956718</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>21</th>\n",
       "      <td>24</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>14</td>\n",
       "      <td>-2</td>\n",
       "      <td>8</td>\n",
       "      <td>1</td>\n",
       "      <td>-2</td>\n",
       "      <td>-19</td>\n",
       "      <td>-3.358757</td>\n",
       "      <td>de</td>\n",
       "      <td>3.358757</td>\n",
       "      <td>22.0</td>\n",
       "      <td>0.693548</td>\n",
       "      <td>0.846774</td>\n",
       "      <td>1.022696</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22</th>\n",
       "      <td>21</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>26</td>\n",
       "      <td>60</td>\n",
       "      <td>14</td>\n",
       "      <td>9</td>\n",
       "      <td>-23</td>\n",
       "      <td>-21</td>\n",
       "      <td>-3.712311</td>\n",
       "      <td>acd</td>\n",
       "      <td>3.712311</td>\n",
       "      <td>23.0</td>\n",
       "      <td>0.725806</td>\n",
       "      <td>0.862903</td>\n",
       "      <td>1.093456</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>23</th>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>30</td>\n",
       "      <td>55</td>\n",
       "      <td>96</td>\n",
       "      <td>19</td>\n",
       "      <td>22</td>\n",
       "      <td>-27</td>\n",
       "      <td>-4.772971</td>\n",
       "      <td>bc</td>\n",
       "      <td>4.772971</td>\n",
       "      <td>24.0</td>\n",
       "      <td>0.758065</td>\n",
       "      <td>0.879032</td>\n",
       "      <td>1.170163</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>24</th>\n",
       "      <td>20</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>24</td>\n",
       "      <td>57</td>\n",
       "      <td>-3</td>\n",
       "      <td>23</td>\n",
       "      <td>27</td>\n",
       "      <td>37</td>\n",
       "      <td>6.540738</td>\n",
       "      <td>ad</td>\n",
       "      <td>6.540738</td>\n",
       "      <td>25.0</td>\n",
       "      <td>0.790323</td>\n",
       "      <td>0.895161</td>\n",
       "      <td>1.254453</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25</th>\n",
       "      <td>16</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>23</td>\n",
       "      <td>38</td>\n",
       "      <td>-8</td>\n",
       "      <td>33</td>\n",
       "      <td>24</td>\n",
       "      <td>41</td>\n",
       "      <td>7.247845</td>\n",
       "      <td>d</td>\n",
       "      <td>7.247845</td>\n",
       "      <td>26.0</td>\n",
       "      <td>0.822581</td>\n",
       "      <td>0.911290</td>\n",
       "      <td>1.348744</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>26</th>\n",
       "      <td>6</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>27</td>\n",
       "      <td>61</td>\n",
       "      <td>119</td>\n",
       "      <td>210</td>\n",
       "      <td>59</td>\n",
       "      <td>43</td>\n",
       "      <td>7.601398</td>\n",
       "      <td>ab</td>\n",
       "      <td>7.601398</td>\n",
       "      <td>27.0</td>\n",
       "      <td>0.854839</td>\n",
       "      <td>0.927419</td>\n",
       "      <td>1.456837</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>27</th>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>24</td>\n",
       "      <td>47</td>\n",
       "      <td>95</td>\n",
       "      <td>-11</td>\n",
       "      <td>56</td>\n",
       "      <td>51</td>\n",
       "      <td>9.015611</td>\n",
       "      <td>c</td>\n",
       "      <td>9.015611</td>\n",
       "      <td>28.0</td>\n",
       "      <td>0.887097</td>\n",
       "      <td>0.943548</td>\n",
       "      <td>1.585278</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>28</th>\n",
       "      <td>4</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>15</td>\n",
       "      <td>54</td>\n",
       "      <td>105</td>\n",
       "      <td>227</td>\n",
       "      <td>409</td>\n",
       "      <td>53</td>\n",
       "      <td>9.369165</td>\n",
       "      <td>a</td>\n",
       "      <td>9.369165</td>\n",
       "      <td>29.0</td>\n",
       "      <td>0.919355</td>\n",
       "      <td>0.959677</td>\n",
       "      <td>1.746955</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>29</th>\n",
       "      <td>12</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>18</td>\n",
       "      <td>0</td>\n",
       "      <td>17</td>\n",
       "      <td>11</td>\n",
       "      <td>11</td>\n",
       "      <td>65</td>\n",
       "      <td>11.490485</td>\n",
       "      <td>ae</td>\n",
       "      <td>11.490485</td>\n",
       "      <td>30.0</td>\n",
       "      <td>0.951613</td>\n",
       "      <td>0.975806</td>\n",
       "      <td>1.973953</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>30</th>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>27</td>\n",
       "      <td>44</td>\n",
       "      <td>108</td>\n",
       "      <td>199</td>\n",
       "      <td>-6</td>\n",
       "      <td>119</td>\n",
       "      <td>21.036427</td>\n",
       "      <td>b</td>\n",
       "      <td>21.036427</td>\n",
       "      <td>31.0</td>\n",
       "      <td>0.983871</td>\n",
       "      <td>0.991935</td>\n",
       "      <td>2.405983</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "    index  A  B  C  D  E   y  step_1  step_2  step_3  step_4  step_5  \\\n",
       "0      14  1  1  0  0  1  32       1       9      18      21      -1   \n",
       "1      31  1  1  1  1  1  36      11       2      -2       1      -3   \n",
       "2      27  0  1  1  1  1  25       9       4      -3       4      -3   \n",
       "3       9  0  0  1  0  1  21       1      19       5     -10       3   \n",
       "4      15  1  1  1  0  1  34       2       8       0      -9      -3   \n",
       "5      29  1  0  1  1  1  31      12       6       1      -9       3   \n",
       "6      28  1  0  0  1  1  22       7       5      -5       9       5   \n",
       "7      30  1  1  0  1  1  36      10       5     -16      -9      -5   \n",
       "8      23  1  1  1  1  0  33      61      20       6      -5       5   \n",
       "9       7  1  1  1  0  0  31      64     114      40      21      -7   \n",
       "10     17  0  0  1  1  0  29      36       5      13      -4       7   \n",
       "11      5  1  0  1  0  0  20      61     104       5      63       7   \n",
       "12     10  0  1  0  0  1  25      -4      14       9      16       7   \n",
       "13     18  0  1  0  1  0  28      46       6      31      -2      -9   \n",
       "16     25  0  0  1  1  1  22       8       9      -3      -6      11   \n",
       "15     13  1  0  1  0  1  25       5      12      -7       1      11   \n",
       "14     26  0  1  0  1  1  24       4       4      -7     -12      11   \n",
       "17     22  1  1  0  1  0  33      58      -1      32       9     -13   \n",
       "18      8  0  0  0  0  1  20      -8      16      13      30     -15   \n",
       "19     19  0  1  1  1  0  31      53      20      15      -2     -15   \n",
       "20     11  0  1  1  0  1  24      -3      24       9      -4     -19   \n",
       "21     24  0  0  0  1  1  14      -2       8       1      -2     -19   \n",
       "22     21  1  0  1  1  0  26      60      14       9     -23     -21   \n",
       "23      3  0  1  1  0  0  30      55      96      19      22     -27   \n",
       "24     20  1  0  0  1  0  24      57      -3      23      27      37   \n",
       "25     16  0  0  0  1  0  23      38      -8      33      24      41   \n",
       "26      6  1  1  0  0  0  27      61     119     210      59      43   \n",
       "27      1  0  0  1  0  0  24      47      95     -11      56      51   \n",
       "28      4  1  0  0  0  0  15      54     105     227     409      53   \n",
       "29     12  1  0  0  0  1  18       0      17      11      11      65   \n",
       "30      2  0  1  0  0  0  27      44     108     199      -6     119   \n",
       "\n",
       "    std_effect effect  abs_std_effect   r_i      r_i*       p_i       v_i  \n",
       "0    -0.176777    abe        0.176777   1.0  0.016129  0.508065  0.020216  \n",
       "1    -0.530330  abcde        0.530330   2.0  0.048387  0.524194  0.060681  \n",
       "2    -0.530330   bcde        0.530330   3.0  0.080645  0.540323  0.101246  \n",
       "3     0.530330     ce        0.530330   4.0  0.112903  0.556452  0.141979  \n",
       "4    -0.530330   abce        0.530330   5.0  0.145161  0.572581  0.182948  \n",
       "5     0.530330   acde        0.530330   6.0  0.177419  0.588710  0.224227  \n",
       "6     0.883883    ade        0.883883   7.0  0.209677  0.604839  0.265892  \n",
       "7    -0.883883   abde        0.883883   8.0  0.241935  0.620968  0.308023  \n",
       "8     0.883883   abcd        0.883883   9.0  0.274194  0.637097  0.350709  \n",
       "9    -1.237437    abc        1.237437  10.0  0.306452  0.653226  0.394044  \n",
       "10    1.237437     cd        1.237437  11.0  0.338710  0.669355  0.438132  \n",
       "11    1.237437     ac        1.237437  12.0  0.370968  0.685484  0.483089  \n",
       "12    1.237437     be        1.237437  13.0  0.403226  0.701613  0.529045  \n",
       "13   -1.590990     bd        1.590990  14.0  0.435484  0.717742  0.576147  \n",
       "16    1.944544    cde        1.944544  17.0  0.532258  0.766129  0.726158  \n",
       "15    1.944544    ace        1.944544  16.0  0.500000  0.750000  0.674490  \n",
       "14    1.944544    bde        1.944544  15.0  0.467742  0.733871  0.624563  \n",
       "17   -2.298097    abd        2.298097  18.0  0.564516  0.782258  0.779842  \n",
       "18   -2.651650      e        2.651650  19.0  0.596774  0.798387  0.835874  \n",
       "19   -2.651650    bcd        2.651650  20.0  0.629032  0.814516  0.894662  \n",
       "20   -3.358757    bce        3.358757  21.0  0.661290  0.830645  0.956718  \n",
       "21   -3.358757     de        3.358757  22.0  0.693548  0.846774  1.022696  \n",
       "22   -3.712311    acd        3.712311  23.0  0.725806  0.862903  1.093456  \n",
       "23   -4.772971     bc        4.772971  24.0  0.758065  0.879032  1.170163  \n",
       "24    6.540738     ad        6.540738  25.0  0.790323  0.895161  1.254453  \n",
       "25    7.247845      d        7.247845  26.0  0.822581  0.911290  1.348744  \n",
       "26    7.601398     ab        7.601398  27.0  0.854839  0.927419  1.456837  \n",
       "27    9.015611      c        9.015611  28.0  0.887097  0.943548  1.585278  \n",
       "28    9.369165      a        9.369165  29.0  0.919355  0.959677  1.746955  \n",
       "29   11.490485     ae       11.490485  30.0  0.951613  0.975806  1.973953  \n",
       "30   21.036427      b       21.036427  31.0  0.983871  0.991935  2.405983  "
      ]
     },
     "execution_count": 163,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "q2_hn.half_norm_data.sort_values(by='abs_std_effect')"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "62c28fbe",
   "metadata": {},
   "source": [
    "The previously identified effects are still significant and the n-way interaction, which is confounded with the blocks, is not significant.  "
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.15"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
